{"message":"cannot infer an appropriate lifetime for autoref due to conflicting requirements","code":{"code":"E0495","explanation":"A lifetime cannot be determined in the given situation.\n\nErroneous code example:\n\n```compile_fail,E0495\nfn transmute_lifetime<'a, 'b, T>(t: &'a (T,)) -> &'b T {\n    match (&t,) { // error!\n        ((u,),) => u,\n    }\n}\n\nlet y = Box::new((42,));\nlet x = transmute_lifetime(&y);\n```\n\nIn this code, you have two ways to solve this issue:\n 1. Enforce that `'a` lives at least as long as `'b`.\n 2. Use the same lifetime requirement for both input and output values.\n\nSo for the first solution, you can do it by replacing `'a` with `'a: 'b`:\n\n```\nfn transmute_lifetime<'a: 'b, 'b, T>(t: &'a (T,)) -> &'b T {\n    match (&t,) { // ok!\n        ((u,),) => u,\n    }\n}\n```\n\nIn the second you can do it by simply removing `'b` so they both use `'a`:\n\n```\nfn transmute_lifetime<'a, T>(t: &'a (T,)) -> &'a T {\n    match (&t,) { // ok!\n        ((u,),) => u,\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/configuration.rs","byte_start":855,"byte_end":860,"line_start":36,"line_end":36,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        match self.parse(file_path) {","highlight_start":20,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 30:5...","code":null,"level":"note","spans":[{"file_name":"src/configuration.rs","byte_start":577,"byte_end":661,"line_start":30,"line_end":30,"column_start":5,"column_end":89,"is_primary":true,"text":[{"text":"    pub fn set_config(&mut self, file_path: &'a String) -> Result<bool, ConfigLoadError> {","highlight_start":5,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...so that reference does not outlive borrowed content","code":null,"level":"note","spans":[{"file_name":"src/configuration.rs","byte_start":850,"byte_end":854,"line_start":36,"line_end":36,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"        match self.parse(file_path) {","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"but, the lifetime must be valid for the lifetime `'_` as defined on the impl at 18:26...","code":null,"level":"note","spans":[{"file_name":"src/configuration.rs","byte_start":302,"byte_end":304,"line_start":18,"line_end":18,"column_start":26,"column_end":28,"is_primary":true,"text":[{"text":"impl <'a> Configuration <'_> {","highlight_start":26,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...so that reference does not outlive borrowed content","code":null,"level":"note","spans":[{"file_name":"src/configuration.rs","byte_start":1308,"byte_end":1318,"line_start":50,"line_end":50,"column_start":27,"column_end":37,"is_primary":true,"text":[{"text":"        self.dbfilename = dbfilename;","highlight_start":27,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0495]\u001b[0m\u001b[0m\u001b[1m: cannot infer an appropriate lifetime for autoref due to conflicting requirements\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/configuration.rs:36:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        match self.parse(file_path) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 30:5...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/configuration.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn set_config(&mut self, file_path: &'a String) -> Result<bool, ConfigLoadError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...so that reference does not outlive borrowed content\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/configuration.rs:36:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        match self.parse(file_path) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: but, the lifetime must be valid for the lifetime `'_` as defined on the impl at 18:26...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/configuration.rs:18:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl <'a> Configuration <'_> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...so that reference does not outlive borrowed content\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/configuration.rs:50:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        self.dbfilename = dbfilename;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0495`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0495`.\u001b[0m\n"}
